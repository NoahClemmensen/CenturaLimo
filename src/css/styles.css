/* You can add global css to this file, and also import other style files */

@font-face {
  font-family: 'Botera TFE Regular';
  font-style: normal;
  font-weight: normal;
  src: local('Botera TFE Regular'), url('CenturaLimo/fonts/botera/Botera-Regular.woff') format('woff');
}

@font-face {
  font-family: 'Botera TFE Regular Stencil';
  font-style: normal;
  font-weight: normal;
  src: local('Botera TFE Regular Stencil'), url('CenturaLimo/fonts/botera/Botera-RegularStencil.woff') format('woff');
}

@font-face {
  font-family: Hermaiona;
  src: url("CenturaLimo/fonts/hermaiona/hermaiona.ttf") format("truetype");
}

body {
  font-family: "Botera TFE Regular", serif;
  font-optical-sizing: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  margin: 0;
  padding: 0;
  min-height: 100vh;
}

a {
  color: inherit;
  text-decoration: none;
}

app-root {
  display: block;
  height: 100vh;
}

input, textarea, button {font-family: inherit}

:root {
  --elevation-0: none;
  --elevation-1: 0 1px 2px 0 rgba(25, 25, 25, 0.3),
  0 1px 3px 1px rgba(25, 25, 25, 0.15);
  --elevation-2: 0 1px 2px 0 rgba(25, 25, 25, 0.3),
  0 2px 6px 2px rgba(25, 25, 25, 0.15);
  --elevation-3: 0 4px 8px 3px rgba(25, 25, 25, 0.15),
  0 1px 3px 0 rgba(25, 25, 25, 0.3);
  --elevation-4: 0 6px 10px 4px rgba(25, 25, 25, 0.15),
  0 2px 3px 0 rgba(25, 25, 25, 0.3);
  --elevation-10: 0 10px 20px 5px rgba(25, 25, 25, 0.5),
  0 4px 6px 0 rgba(25, 25, 25, 0.3);

  --radius-1: 8px;
  --radius-2: 12px;
  --radius-3: 16px;
  --radius-4: 20px;

  --transition-speed: 250ms;
}

/* Elevation */
.elevation-1 {
  /* M1/elevation/1 */
  box-shadow: var(--elevation-1);
}

.elevation-2 {
  /* M1/elevation/2 */
  box-shadow: var(--elevation-2);
}

.elevation-3 {
  /* M1/elevation/3 */
  box-shadow: var(--elevation-3);
}

.elevation-4 {
  /* M1/elevation/4 */
  box-shadow: var(--elevation-4);
}

.elevation-10 {
  /* M1/elevation/10 */
  box-shadow: var(--elevation-10);
}

/* Corner radius's */

.radius-1 {
  border-radius: var(--radius-1);
}

.radius-2 {
  border-radius: var(--radius-2);
}

.radius-3 {
  border-radius: var(--radius-3);
}

.radius-4 {
  border-radius: var(--radius-4);
}

/* Typography */
.display-lg {
  font-size: 58px;
  line-height: 66px;
  font-weight: 600;
  margin: 0;
}

.display-md {
  /* M1/display/medium */
  font-size: 50px;
  font-weight: 600;
  line-height: 58px; /* 123.81% */
  margin: 0;
}

.display-sm {
  /* M1/display/small */
  font-size: 42px;
  font-weight: 600;
  line-height: 50px; /* 123.529% */
  margin: 0;
}

.headline-lg {
  /* M1/headline/large */
  font-size: 34px;
  font-weight: 700;
  line-height: 42px; /* 128.571% */
  margin: 0;
}

.headline-md {
  /* M1/headline/medium */
  font-size: 26px;
  font-weight: 700;
  line-height: 34px; /* 133.333% */
  margin: 0;
}

.headline-sm {
  /* M1/headline/small */
  font-size: 18px;
  font-weight: 700;
  line-height: 26px; /* 140% */
  margin: 0;
}

.title-lg {
  /* M1/title/large */
  font-size: 16px;
  font-weight: 600;
  line-height: 24px; /* 150% */
  margin: 0;
}

.title-md {
  /* M1/title/medium */
  font-size: 14px;
  font-weight: 600;
  line-height: 20px; /* 142.857% */
  margin: 0;
}

.title-sm {
  /* M1/title/small */
  font-size: 12px;
  font-weight: 600;
  line-height: 16px; /* 133.333% */
  margin: 0;
}

.label-lg {
  /* M1/label/large */
  font-size: 14px;
  font-weight: 550;
  line-height: 20px; /* 153.846% */
  margin: 0;
}

.label-md {
  /* M1/label/medium */
  font-size: 13px;
  font-weight: 550;
  line-height: 20px; /* 133.333% */
  margin: 0;
}

.label-sm {
  /* M1/label/small */
  font-size: 12px;
  font-weight: 550;
  line-height: 16px; /* 127.273% */
  margin: 0;
}

.label-xs {
  /* M1/label/extra-small */
  font-size: 11px;
  font-weight: 550;
  line-height: 14px; /* 127.273% */
  margin: 0;
}

.body-lg {
  /* M1/body/large */
  font-size: 14px;
  font-weight: 450;
  line-height: 22px; /* 142.857% */
  margin: 0;
}

.body-md {
  /* M1/body/medium */
  font-size: 13px;
  font-weight: 450;
  line-height: 20px; /* 153.846% */
  margin: 0;
}

.body-sm {
  /* M1/body/small */
  font-size: 12px;
  font-weight: 450;
  line-height: 16px; /* 133.333% */
  margin: 0;
}

/* State layers */
.state-layered {
  position: relative;
}

.state-layered > * {
  z-index: 1;
}

.state-layered::before {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 0;
  border-radius: inherit;
  background: transparent;
  pointer-events: none;
  transition: background-color var(--transition-speed) ease;
}

.state-layered:not(.no-states):hover::before {
  background: var(--on-surface-08);
}

.state-layered:not(.no-states).inverted:hover::before {
  background: var(--on-primary-08);
}

.state-layered:not(.no-states).error:not(.no-error-state):hover::before {
  background: var(--on-error-08);
}

.state-layered:not(.no-states):focus::before,
.state-layered:not(.no-states):active::before {
  background: var(--on-surface-12);
}

.state-layered:not(.no-states).inverted:focus::before,
.state-layered:not(.no-states).inverted:active::before {
  background: var(--on-primary-12);
}

.state-layered:not(.no-states).error:not(.no-error-state):focus::before,
.state-layered:not(.no-states).error:not(.no-error-state):active::before {
  background: var(--on-error-12);
}

.state-layered:not(.no-states):disabled:not(.no-disabled-state),
.state-layered:not(.no-states).disabled:not(.no-disabled-state) {
  background: transparent !important;
}

.state-layered:not(.no-states):disabled:not(.no-disabled-state),
.state-layered:not(.no-states).disabled:not(.no-disabled-state) {
  pointer-events: none;
  color: var(--on-surface);
}

.state-layered:not(.no-states).inverted:disabled:not(.no-disabled-state),
.state-layered:not(.no-states).inverted.disabled:not(.no-disabled-state) {
  color: var(--on-primary);
}

.state-layered:not(.no-states):disabled:not(.no-disabled-state) > *,
.state-layered:not(.no-states).disabled:not(.no-disabled-state) > * {
  cursor: default;
  pointer-events: none;
  opacity: 0.35;
}

.state-layered:not(.no-states):disabled:not(.no-disabled-state)::before,
.state-layered:not(.no-states).disabled:not(.no-disabled-state)::before {
  background: var(--on-surface-08);
}
